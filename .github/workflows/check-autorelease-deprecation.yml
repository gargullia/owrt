name: Check autorelease deprecation

on:
  push:
    branches:
      - main

jobs:
  check-autorelease:
    name: Check autorelease deprecation
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout full repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # ❗ получаем полную историю и все ветки

      - name: Fetch origin
        run: git fetch origin

      - name: Determine changed packages
        run: |
          # Получим изменённые файлы с момента предыдущего коммита
          CHANGES=$(git diff --name-only HEAD^)

          # Ищем make-файлы
          PKG_ROOTS=$(find . -name Makefile | \
            grep -v ".*/src/Makefile" | \
            sed -e 's@./\(.*\)/Makefile@\1/@')

          RET=0
          CONTAINS_AUTORELEASE=""

          for ROOT in $PKG_ROOTS; do
            for CHANGE in $CHANGES; do
              if [[ "$CHANGE" == "$ROOT"* ]]; then
                if grep -q '$(AUTORELEASE)' "$ROOT/Makefile"; then
                  CONTAINS_AUTORELEASE+="$ROOT "
                fi
                break
              fi
            done
          done

          if [ -n "$CONTAINS_AUTORELEASE" ]; then
            RET=1
            echo "Deprecated AUTORELEASE found in:"
            echo "$CONTAINS_AUTORELEASE"

            cat > "$GITHUB_WORKSPACE/pr_comment.md" << EOF
Please do not set *PKG_RELEASE* to *AUTORELEASE*, as the feature is deprecated. Use an integer instead.  
Affected packages:
EOF
            for ROOT in $CONTAINS_AUTORELEASE; do
              echo -n "  - ${ROOT}Makefile: PKG_RELEASE:=" >> "$GITHUB_WORKSPACE/pr_comment.md"
              last_bump="$(git log --pretty=format:'%h %s' "$ROOT" |
                grep --max-count=1 -e ': [uU]pdate to ' -e ': [bB]ump to ' |
                cut -f 1 -d ' ')"

              if [ -n "$last_bump" ]; then
                echo -n $(($(git rev-list --count "$last_bump..HEAD" "$ROOT") + 2)) >> "$GITHUB_WORKSPACE/pr_comment.md"
              else
                echo -n $(($(git rev-list --count HEAD "$ROOT") + 2)) >> "$GITHUB_WORKSPACE/pr_comment.md"
              fi
              echo >> "$GITHUB_WORKSPACE/pr_comment.md"
            done
          fi

          exit $RET

      - name: Upload comment artifact (optional)
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: pr_comment
          path: pr_comment.md
